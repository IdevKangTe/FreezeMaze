export { map };

const excelNum = `1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
1	1	1	0	0	0	0	1	1	1	1	1	0	0	0	0	0	0	0	1	1	0	0	0	1	0	0	0	1	0	0	0	0	0	1	0	0	0	0	1	1	1	1	1	0	0	0	0	3	1
1	1	1	0	1	1	0	1	1	1	1	1	0	1	1	1	0	1	0	0	0	0	1	0	1	0	1	0	1	0	1	1	1	0	1	0	1	1	0	1	1	1	1	1	0	1	1	1	0	1
1	1	0	0	1	1	0	1	1	1	1	1	0	1	1	1	0	1	1	1	1	0	1	0	0	0	1	0	0	0	1	0	0	0	1	0	0	0	0	1	1	1	0	0	0	0	0	1	0	1
1	1	0	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	1	0	0	0	1	1	1	1	1	1	1	1	0	0	1	0	1	1	0	1	0	1	1	0	0	1	1	1	0	1	0	1
1	0	0	1	1	0	1	1	1	0	1	1	1	1	1	1	1	0	1	0	1	1	1	1	0	0	0	0	0	1	0	1	0	0	1	1	0	1	0	0	0	0	1	0	0	0	0	1	0	1
1	0	1	1	1	0	0	0	0	0	0	1	1	0	0	0	1	0	1	0	0	1	1	1	0	1	1	1	0	1	0	1	0	1	1	1	0	0	0	1	1	0	0	0	1	1	0	0	0	1
1	0	1	1	1	1	1	1	1	1	0	1	0	0	1	0	1	0	0	1	0	0	0	0	0	1	1	0	0	1	0	1	0	1	1	0	0	1	1	1	1	0	1	1	1	1	0	1	0	1
1	0	0	0	0	0	0	0	0	0	0	0	0	1	1	0	1	1	0	1	1	1	0	1	1	0	0	0	1	1	0	0	0	0	1	0	1	0	0	0	1	0	1	0	0	0	0	1	0	1
1	0	1	1	1	1	1	1	1	0	1	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	1	1	1	1	1	1	1	0	0	0	1	0	1	0	1	0	0	0	1	0	1	1	0	1
1	0	0	1	1	0	0	0	1	0	1	1	1	0	1	1	1	1	1	1	0	1	1	1	1	0	1	0	0	0	1	1	0	0	1	0	1	0	1	0	1	0	1	1	0	0	0	0	0	1
1	1	0	1	1	0	1	0	1	0	1	1	1	0	1	0	0	0	0	1	0	0	0	0	1	0	1	0	1	0	1	1	0	1	1	0	1	0	0	0	0	0	0	0	0	1	1	0	1	1
1	0	0	1	0	0	1	0	0	0	0	1	1	0	0	0	1	1	0	1	0	1	1	0	0	0	0	0	1	0	0	0	0	0	1	0	1	1	1	1	1	0	1	1	1	0	0	0	1	1
1	0	1	1	0	1	1	0	1	1	0	0	0	1	1	0	1	0	0	1	0	1	0	0	1	1	1	1	1	0	1	1	1	0	1	0	0	0	0	0	0	0	1	0	0	0	1	0	1	1
1	0	0	0	0	0	0	0	1	1	0	1	0	0	0	0	1	0	1	1	0	1	0	1	0	0	0	0	0	0	1	1	0	0	1	0	1	1	0	1	1	1	1	0	1	1	0	0	0	1
1	1	0	1	1	1	1	0	0	1	0	1	0	1	0	1	1	0	0	0	0	1	0	0	0	1	0	1	1	0	0	1	0	1	1	0	1	0	0	1	0	0	0	0	1	1	0	1	0	1
1	1	0	0	0	0	1	1	0	1	0	1	0	1	0	1	0	0	1	1	0	1	0	1	1	0	0	1	1	1	0	0	0	1	0	0	1	0	1	0	0	1	1	0	0	0	0	0	0	1
1	1	1	1	1	0	1	1	0	0	0	1	0	1	0	0	0	1	1	0	0	1	0	1	1	0	1	0	0	0	1	1	1	0	0	1	0	0	1	0	1	1	0	0	1	1	1	1	0	1
1	1	1	0	0	0	1	0	0	1	0	1	0	1	0	1	1	0	0	0	1	0	0	1	0	0	0	0	1	0	0	0	0	0	1	1	0	1	0	0	1	1	0	1	1	0	0	0	0	1
1	1	0	0	1	1	1	0	1	1	0	1	0	1	0	0	0	0	1	1	1	0	1	0	0	1	0	1	1	1	1	1	0	1	1	1	0	1	0	1	1	0	0	0	1	0	1	1	1	1
1	1	0	1	1	1	1	0	1	1	0	1	0	1	0	1	1	0	0	0	1	0	1	0	1	1	0	0	0	0	1	0	0	0	0	1	0	1	0	0	0	0	1	0	1	0	0	0	1	1
1	1	0	1	0	0	0	0	0	0	0	1	0	1	0	1	1	1	1	0	1	0	0	0	1	1	1	0	1	0	0	0	1	1	0	0	0	1	0	1	1	0	1	0	0	1	1	0	0	1
1	1	0	1	0	1	1	1	1	1	0	0	0	1	0	1	0	0	0	0	1	0	1	1	1	0	0	0	1	0	1	0	0	1	1	0	1	1	0	1	1	0	0	1	0	0	0	1	0	1
1	1	0	0	0	0	0	0	1	1	1	1	0	0	0	1	0	1	1	0	1	0	0	0	0	0	1	1	0	0	1	1	0	1	1	0	1	0	0	0	1	1	0	1	1	1	0	1	0	1
1	1	1	1	1	1	1	0	0	0	1	1	1	0	1	1	0	1	0	0	1	0	1	1	1	0	0	0	0	1	1	1	0	1	1	0	0	0	1	0	0	0	0	1	1	0	0	1	0	1
1	1	0	0	0	0	1	1	1	0	0	1	1	0	1	0	0	1	0	1	1	0	1	1	0	0	1	1	0	0	0	0	0	1	0	0	1	1	0	0	1	0	1	1	1	0	1	0	0	1
1	0	0	1	1	0	0	0	1	1	0	1	1	0	0	0	1	0	0	1	0	0	0	0	0	1	1	1	1	1	1	0	1	1	0	1	1	0	0	1	1	0	1	1	1	0	1	0	1	1
1	0	1	1	1	1	1	0	0	1	0	1	1	1	0	1	1	0	1	1	0	1	1	0	1	0	0	0	0	0	1	0	0	1	0	1	1	0	1	1	1	0	1	1	0	0	0	0	0	1
1	0	1	0	0	0	1	1	0	1	0	1	1	1	0	1	1	0	0	1	0	1	1	0	1	0	1	1	1	0	1	1	0	1	0	0	0	0	0	0	0	0	1	0	0	1	1	1	0	1
1	0	0	0	1	0	0	0	0	1	0	0	1	0	0	0	0	1	0	0	0	1	0	0	1	0	1	0	0	0	0	1	0	0	1	0	0	1	1	1	1	0	1	0	1	0	0	0	0	1
1	0	1	0	1	0	1	1	0	1	1	0	1	0	1	1	0	1	1	1	0	1	0	1	0	0	0	0	1	1	0	1	1	0	1	1	0	0	1	1	1	0	0	0	1	0	1	0	1	1
1	0	1	0	0	0	1	0	0	1	1	0	0	0	1	0	0	0	0	0	0	1	0	0	0	1	1	1	1	1	0	0	0	0	0	0	1	0	0	1	1	1	1	1	0	0	1	0	1	1
1	0	0	1	1	1	0	0	1	1	1	1	1	1	0	0	1	1	1	1	0	0	1	1	0	0	0	0	0	0	0	1	1	1	1	0	0	1	0	0	0	0	0	0	0	1	1	0	1	1
1	1	0	0	0	0	0	1	1	1	1	1	1	1	0	1	0	0	0	1	1	0	1	0	0	1	0	1	1	0	1	0	0	0	1	1	0	1	0	1	1	1	1	1	1	1	0	0	1	1
1	1	1	1	0	1	1	0	0	0	1	1	1	0	0	0	0	1	0	0	0	0	1	0	1	1	0	1	0	0	0	0	1	0	0	0	0	0	0	1	1	1	1	1	1	1	0	1	1	1
1	1	0	0	0	0	0	0	1	0	1	1	1	0	1	1	1	1	1	1	1	0	1	0	0	0	0	1	0	1	1	1	1	1	1	1	0	1	1	1	1	0	0	0	1	1	0	1	1	1
1	0	0	1	0	1	1	1	1	0	1	1	0	0	0	0	1	1	1	1	0	0	1	1	0	1	1	1	0	0	0	1	1	1	1	0	0	1	1	1	1	0	1	0	0	0	0	1	1	1
1	0	1	1	0	1	0	0	0	0	1	1	0	1	1	0	0	1	0	0	0	1	0	0	0	0	0	1	1	1	0	0	1	0	0	0	1	1	1	1	1	0	1	0	1	1	1	1	1	1
1	0	1	0	0	1	0	1	1	0	1	1	0	1	1	1	0	0	0	1	1	0	0	1	1	1	0	0	1	1	1	0	0	0	1	0	1	1	1	1	0	0	1	0	0	0	1	1	1	1
1	0	0	0	1	0	0	0	1	0	0	0	0	0	0	0	1	1	1	1	0	0	1	1	1	1	1	0	0	0	0	1	1	1	1	0	1	1	1	1	0	1	1	0	1	0	1	1	1	1
1	0	1	0	0	0	1	0	0	0	1	1	0	1	1	0	1	1	1	0	0	1	1	1	1	1	1	1	0	1	0	1	1	1	0	0	0	0	1	0	0	1	0	0	1	0	0	0	1	1
1	0	1	0	1	0	1	1	1	0	1	1	0	1	1	0	0	1	0	0	0	1	1	1	1	1	1	1	0	0	0	0	1	0	0	1	1	0	0	0	1	0	0	1	1	1	1	0	1	1
1	0	1	0	1	0	1	1	1	0	1	0	0	0	0	1	0	1	0	1	0	0	1	1	1	1	1	0	0	1	1	0	1	0	1	1	1	1	0	1	0	0	1	1	0	0	0	0	0	1
1	0	1	0	1	0	1	1	1	0	1	0	1	1	0	0	0	1	0	1	1	0	0	1	1	1	0	0	1	1	1	0	1	0	0	0	1	1	0	0	0	1	0	0	0	1	1	1	0	1
1	0	0	0	0	0	0	0	0	0	0	0	0	1	0	1	0	0	0	1	1	1	0	0	0	0	0	1	1	1	1	0	0	0	1	0	1	1	0	1	1	1	0	1	0	0	0	0	0	1
1	1	0	1	1	1	1	0	1	1	1	1	0	1	0	1	1	1	0	0	0	0	0	1	1	1	0	0	0	0	0	0	1	1	0	0	1	1	0	1	0	0	0	1	0	1	1	1	0	1
1	0	0	1	1	0	0	0	0	0	0	0	0	1	0	0	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	0	0	1	1	1	0	1	0	1	1	1	0	0	0	0	0	1
1	0	1	1	1	0	1	1	1	1	1	1	0	1	1	0	0	0	1	1	1	1	1	1	1	1	1	1	1	1	1	0	0	0	1	1	1	1	0	1	0	1	1	1	0	1	1	1	0	1
1	3	0	0	0	0	0	0	0	0	0	0	0	1	1	1	1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1	1	1	1	1	1	0	0	0	0	0	0	0	0	0	0	0	1
1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1`;

// 문자열 전체(g)에서 숫자0~9가 아닌 것 삭제
let _excelNum = excelNum.split(/[^0-9]/g);
// console.log(_excelNum);

// 문자열 숫자로 변환
const mapNum = _excelNum.map(row => row *= 1);
// console.log(mapNum);

// 이차원 배열에 담기
const map = [];
let _map = [];

mapNum.forEach((row) => {
    _map.push(row);
    if (_map.length === 50) {
        map.push(_map);
        _map = [];
    }
});
// console.log(map);

// map 배열 값 타입 확인
const g = (map) => {
    for(i in map) {
        if (typeof map[i] !== "number") {
            console.log(i);
        }
        else {
            console.log('nothing');
        }
    }
};
// console.log(g(map));
